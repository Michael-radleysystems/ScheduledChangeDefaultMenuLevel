local g_nTimerID;
local g_tDateLastDone = {day = 0};
local nBreakfastPage = 0;
local nLunchPage = 0;
local nDinnerPage = 0;
local bBreakfastDone = false;
local bLunchDone = false;
local bDinnerDone = false;

function OnInit()
{
	// timer once per minute
	g_nTimerID = ICR_StartTimer(10000);
}

function OnTimer(nTimerID,nSysTimer)
{
	
	// is it our timer?
	if(nTimerID == g_nTimerID)
	{
		//TODO check the time set lunch page
		if(bBreakfastDone)
		{
			
		}
		
		//TODO check the time set dinner page
		if(bLunchDone)
		{
			
		}
		
		//TODO check the time
		//reset lunch and dinner check
		//set breakfast page
		//set day check
		if(bDinnerDone)
		{
			
		}

		/*
		//Example for time checking
		local tDate = date();
		if (g_tDateLastDone.day == tDate.day)
		{
			// already done it today
			return;
		}
		*/
	}
}

/*
 * Create a Time class for doing time comparison 
 * 
 */

class Time
{
	hour = 0;
	min = 0;
	sec = 0;
	
	constructor(tDate)
	{
		hour = tDate.hour;
		min = tDate.min;
		sec = tDate.sec;
	}

	function compareTo(tTime)
	{
		if(hour < tTime.hour)
		{
			return -1; // return negative is this object is smaller
		}
		
		if(hour > tTime.hour)
		{
			return 1; // return positive is this object is bigger
		}
		
		if(hour == tTime.hour)
		{
			if(min < tTime.min)
			{
				return -1; // return negative is this object is smaller
			}
			
			if(min > tTime.min)
			{
				return 1; // return positive is this object is bigger
			}
			
			if(min == tTime.min)
			{
				if(sec < tTime.sec)
				{
					return -1; // return negative is this object is smaller
				}
				
				if(sec > tTime.sec)
				{
					return 1; // return positive is this object is bigger
				}
				
				if(sec == tTime.sec)
				{
					return 0; // return zero is this object is the same as the passed in object
				}
			}
		}
	}
	
	function tostring()
	{
		return hour+":"+min+"."+sec; // return contents as String
	}
}


